# Ex.No: 10 Learning â€“ Use Supervised Learning  
### DATE:                                                                            
### REGISTER NUMBER : 
### AIM: 
To write a program to train the classifier for -----------------.
###  Algorithm:
   1. Start the program

   2. Import necessary libraries

    3.Define the list of documents and the query

    4.Initialize the TF-IDF vectorizer

   5. Convert documents and query into TF-IDF vectors

   6. Calculate cosine similarity between query and documents

   7. Find the document with the highest similarity

   8. Print the most similar document

   9. Stop the program




### Program:
```
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import pandas as pd

# Sample documents and question
documents = [
    "The quick brown fox jumps over the lazy dog.",
    "A quick fox jumps over the lazy dog, and the brown dog sleeps.",
    "The dog is sleeping, and the fox is quick.",
    "This is a sample document."
]

question = "What does a quick fox do?"

# Create a DataFrame for easier manipulation
df = pd.DataFrame({'text': documents})

# 1. Vectorize the documents and question using TF-IDF
vectorizer = TfidfVectorizer()
document_vectors = vectorizer.fit_transform(df['text'].values)
question_vector = vectorizer.transform([question])

# 2. Calculate cosine similarity between the question and each document
similarity_scores = cosine_similarity(question_vector, document_vectors)[0]

# 3. Find the most similar document
most_similar_index = similarity_scores.argsort()[-1]

# 4. Print the most similar document
print(f"Question: {question}")
print(f"Most similar document index: {most_similar_index}")
print(f"Most similar document:\n{documents[most_similar_index]}")
```


### Output:
file:///C:/Users/SEC/Desktop/ai%20output.jpg


Thus the system was trained successfully and the prediction was carried out.
