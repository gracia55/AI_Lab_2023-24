# Ex.No: 10 Learning â€“ Use Supervised Learning  
### DATE:                                                                            
### REGISTER NUMBER : 
### AIM: 
To write a program to train the classifier for -----------------.
###  Algorithm:
1.Start the program
2.import the math package
3.Specify the score value of leaf nodes and find the depth of binary tree from leaf nodes.
4.Define the minimax function
5.If maximum depth is reached then get the score value of leaf node.
6.Max player find the maximum value by calling the minmax function recursively.
7.Min player find the minimum value by calling the minmax function recursively.
8.Call the minimax function and print the optimum value of Max player.
9.Stop the program.


### Program:
```import math

def minimax(curDepth, nodeIndex, maxTurn, scores, targetDepth):
    # Base case: targetDepth reached
    if curDepth == targetDepth:
        return scores[nodeIndex]
    
    if maxTurn:
        return max(
            minimax(curDepth + 1, nodeIndex * 2, False, scores, targetDepth),
            minimax(curDepth + 1, nodeIndex * 2 + 1, False, scores, targetDepth)
        )
    else:
        return min(
            minimax(curDepth + 1, nodeIndex * 2, True, scores, targetDepth),
            minimax(curDepth + 1, nodeIndex * 2 + 1, True, scores, targetDepth)
        )
```


### Output:



Thus the system was trained successfully and the prediction was carried out.
